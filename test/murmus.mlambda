let rec complete_tree = fun n ->
  if (equals n 0) then
    Leaf
  else (
    let sub = complete_tree (sub n 1) in
    Node (n, sub, sub)
  )

let rec double_tree = fun n ->
  if (equals n 0) then
    (Leaf, Leaf)
  else (
    let (sub1, sub2) = double_tree (sub n 1) in
    (Node (n, sub1, sub2), Node (sub 4 n, sub2, sub1))
  )



let rec double_tree_cond = fun pred n ->
  if (equals n 0) then
    (Leaf, Leaf)
  else (
    let (sub1, sub2) = double_tree pred (sub n 1) in
    ( Node (n, sub1, sub2)
    , if pred n then
        Node (sub 4 n, sub1, sub2)
      else
        Node (sub 4 n, sub2, sub1))
  )

